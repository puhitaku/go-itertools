package main

import (
	"reflect"
	"testing"

	"github.com/puhitaku/go2-itertools/itertools"
)

func TestConv(t *testing.T) {
	t.Run("S", testS)
	t.Run("C", testC)
}

func testS(t *testing.T) {
	c := make(chan int)
	go func() {
		defer close(c)
		for i := 0; i < 5; i++ {
			c <- i
		}
	}()

	output := itertools.S(c)
	expect := []int{0, 1, 2, 3, 4}

	if !reflect.DeepEqual(output, expect) {
		t.Fatal("the result did not match with the expected slice")
	}
}

func testC(t *testing.T) {
	output := []int{}
	expect := []int{0, 1, 2, 3, 4}
	for v := range itertools.C([]int{0, 1, 2, 3, 4}) {
		output = append(output, v)
	}

	if !reflect.DeepEqual(output, expect) {
		t.Fatal("the result did not match with the expected slice")
	}
}
